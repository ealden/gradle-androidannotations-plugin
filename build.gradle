version = '0.4.0.BUILD-SNAPSHOT'
//group = 'org.androidannotations.gradle.plugins'
group = 'net.ealden.gradle.plugins'
description = 'Gradle AndroidAnnotations Plugin'

def artifact = 'gradle-androidannotations-plugin'
project.ext.set('artifact', artifact)

def isReleaseVersion = !version.endsWith('SNAPSHOT')

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'

def compatibilityVersion = 1.6
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

configurations {
  integrationTestCompile {
    extendsFrom testCompile
  }
  integrationTestRuntime {
    extendsFrom integrationTestCompile, testRuntime
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url 'https://oss.sonatype.org/content/repositories/snapshots/'
  }
}

def gradleAndroidPluginVersion = '1.2.2-SNAPSHOT'

dependencies {
  groovy localGroovy()
  compile gradleApi()
  compile "org.gradle.api.plugins:gradle-android-plugin:$gradleAndroidPluginVersion"
}

sourceSets {
  integrationTest {
    compileClasspath = sourceSets.main.output + configurations.testRuntime
    runtimeClasspath = output + sourceSets.main.output + configurations.testRuntime
    groovy {
      srcDir file('src/integrationTest/groovy')
    }
    resources {
      srcDir file('src/integrationTest/resources')
    }
  }
}

idea {
  module {
    downloadSources = true
    downloadJavadoc = true

    testSourceDirs += file('src/integrationTest/groovy')
    testSourceDirs += file('src/integrationTest/resources')
  }
  project {
    jdkName = '1.6'
    languageLevel = compatibilityVersion
  }
}

uploadArchives {
  repositories {
    mavenDeployer {
      pom.project(pomConfiguration)

      beforeDeployment { deployment ->
        signing.signPom(deployment)
      }

      def repositoryUsername = project.hasProperty('sonatypeUsername') ? sonatypeUsername : ''
      def repositoryPassword = project.hasProperty('sonatypePassword') ? sonatypePassword : ''

      if (isReleaseVersion) {
        repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
          authentication(userName: repositoryUsername, password: repositoryPassword)
        }
      } else {
        repository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
          authentication(userName: repositoryUsername, password: repositoryPassword)
        }
      }
    }
  }
}

jar {
  baseName = artifact
}

signing {
  if (isReleaseVersion) {
    sign configurations.archives
  }
}

task integrationTest(type: Test, dependsOn: 'build') {
  testClassesDir = sourceSets.integrationTest.output.classesDir
  classpath = sourceSets.integrationTest.runtimeClasspath
  systemProperties['integrationTest.testProjects'] = new File(sourceSets.integrationTest.output.resourcesDir, 'testProjects').absolutePath

  outputs.upToDateWhen {
    return false
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  baseName = artifact
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  baseName = artifact
  classifier = 'javadoc'
  from javadoc.destinationDir
}

task generatePom << {
  def generatedPomFileName = 'pom.xml'

  pom {
    project(pomConfiguration)
  }.writeTo("$buildDir/$generatedPomFileName")
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.5'
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

def getPomConfiguration() {
  return {
    groupId project.group
    artifactId project.artifact
    version project.version
    packaging 'jar'
    name 'Gradle AndroidAnnotations Plugin'
    description 'AndroidAnnotations plugin for Gradle'
    url 'https://github.com/ealden/gradle-androidannotations-plugin'
    licenses {
      license {
        name 'The Apache Software License, Version 2.0'
        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        distribution 'repo'
      }
    }
    scm {
      url 'https://github.com/ealden/gradle-androidannotations-plugin'
      connection 'scm:git://github.com/ealden/gradle-androidannotations-plugin.git'
      developerConnection 'scm:git@github.com:ealden/gradle-androidannotations-plugin.git'
    }
    developers {
      developer {
        id 'ealden'
        name 'Ealden Esto E. Escanan'
        email 'ealden@gmail.com'
      }
    }
  }
}

defaultTasks 'assemble'
